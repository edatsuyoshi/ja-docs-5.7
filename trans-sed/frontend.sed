s/^# JavaScript & CSS Scaffolding$/# JavaScriptとCSSスカフォールド/
s/^- \[Introduction\](#introduction)$/- [イントロダクション](#introduction)/
s/^- \[Writing CSS\](#writing-css)$/- [CSSの出力](#writing-css)/
s/^- \[Writing JavaScript\](#writing-javascript)$/- [JavaScriptの出力](#writing-javascript)/
s/^    - \[Writing Vue Components\](#writing-vue-components)$/    - [Vueコンポーネントの出力](#writing-vue-components)/
s/^    - \[Using React\](#using-react)$/    - [Using React](#using-react)/
s/^## Introduction$/## イントロダクション/
s/^While Laravel does not dictate which JavaScript or CSS pre-processors you use, it does provide a basic starting point using \[Bootstrap\](https:\/\/getbootstrap\.com\/) and \[Vue\](https:\/\/vuejs\.org) that will be helpful for many applications\. By default, Laravel uses \[NPM\](https:\/\/www\.npmjs\.org) to install both of these frontend packages\.$/LaravelはJavaScriptやCSSプリプロセッサの使用を規定してはいませんが、開発時点の元としてほとんどのアプリケーションで役立つだろう[Bootstrap](https:\/\/getbootstrap.com)と[Vue](https:\/\/vuejs.org)を提供しています。これらのフロントエンドパッケージをインストールするため、Laravelは[NPM](https:\/\/www.npmjs.org)を使用しています。/
s/^\[Laravel Mix\](\/docs\/{{version}}\/mix) provides a clean, expressive API over compiling SASS or Less, which are extensions of plain CSS that add variables, mixins, and other powerful features that make working with CSS much more enjoyable\. In this document, we will briefly discuss CSS compilation in general; however, you should consult the full \[Laravel Mix documentation\](\/docs\/{{version}}\/mix) for more information on compiling SASS or Less\.$/CSSをもっと楽しく取り扱うために役立つ、変数やmixinなどのパワフルな機能を通常のCSSへ付け加え、SASSとLESSをコンパイルするため、[Laravel Mix](\/docs\/{{version}}\/mix)はクリーンで表現的なAPIを提供しています。このドキュメントでは、CSSコンパイル全般について簡単に説明します。SASSとLESSのコンパイルに関する情報は、[Laravel Mix documentation](\/docs\/{{version}}\/mix)で確認してください。/
s/^Laravel does not require you to use a specific JavaScript framework or library to build your applications\. In fact, you don't have to use JavaScript at all\. However, Laravel does include some basic scaffolding to make it easier to get started writing modern JavaScript using the \[Vue\](https:\/\/vuejs\.org) library\. Vue provides an expressive API for building robust JavaScript applications using components\. As with CSS, we may use Laravel Mix to easily compile JavaScript components into a single, browser-ready JavaScript file\.$/アプリケーションを構築するために、特定のJavaScriptフレームワークやライブラリの使用をLaravelは求めていません。しかし、[Vue](https:\/\/vuejs.org)ライブラリを使用した近代的なJavaScriptを書き始めやすくできるように、基本的なスカフォールドを用意しています。Vueはコンポーネントを使った堅牢なJavaScriptアプリケーションを構築するために、記述的なAPIを提供しています。CSSに関しては、Laravel Mixを使用し、JavaScriptコンポーネントをブラウザでそのまま使用できる１ファイルへ、簡単に圧縮できます。/
s/^#### Removing The Frontend Scaffolding$/#### フロントエンドスカフォールドの削除/
s/^If you would like to remove the frontend scaffolding from your application, you may use the `preset` Artisan command\. This command, when combined with the `none` option, will remove the Bootstrap and Vue scaffolding from your application, leaving only a blank SASS file and a few common JavaScript utility libraries:$/アプリケーションから、フロントエンド向けにスカフォールドした結果を削除したい場合は、`preset` Artisanコマンドを使用します。このコマンドを`none`オプションと一緒に使うと、アプリケーションからBootstrapとVue向けのスカフォールド結果を削除し、空のSASSファイルといくつかのJavaScriptユーティリティライブラリだけが残ります。/
s/^## Writing CSS$/## CSSの出力/
s/^Laravel's `package\.json` file includes the `bootstrap` package to help you get started prototyping your application's frontend using Bootstrap\. However, feel free to add or remove packages from the `package\.json` file as needed for your own application\. You are not required to use the Bootstrap framework to build your Laravel application - it is provided as a good starting point for those who choose to use it\.$/Laravelの`package.json`ファイルは、アプリケーションのフロントエンドのプロトタイピングを開始するのに便利なように、`bootstrap`パッケージを含んでいます。しかし、アプリケーションでの必要性に応じ、自由にパッケージを`package.json`ファイルに追加／削除してください。Laravelアプリケーションを構築するため、Bootstrapフレームワークを使用する必要はありません。Bootstrapを選んでいる開発者にとって、開発はじめやすいように用意してあるだけです。/
s/^Before compiling your CSS, install your project's frontend dependencies using the \[Node package manager (NPM)\](https:\/\/www\.npmjs\.org):$/CSSのコンパイルを始める前に、プロジェクトのフロントエンド開発に必要な依存パッケージである、[Nodeプロジェクトマネージャー(NPM)](https:\/\/www.npmjs.org)を使用し、インストールしてください。/
s/^Once the dependencies have been installed using `npm install`, you can compile your SASS files to plain CSS using \[Laravel Mix\](\/docs\/{{version}}\/mix#working-with-stylesheets)\. The `npm run dev` command will process the instructions in your `webpack\.mix\.js` file\. Typically, your compiled CSS will be placed in the `public\/css` directory:$/`npm install`を使い、依存パッケージをインストールし終えたら、[Laravel Mix](\/docs\/{{version}}\/mix#working-with-stylesheets)を使用して、SASSファイルを通常のCSSへコンパイルできます。`npm run dev`コマンドは`webpack.mix.js`ファイル中の指示を処理します。通常、コンパイル済みCSSは`public\/css`ディレクトリへ設置されます。/
s/^The default `webpack\.mix\.js` included with Laravel will compile the `resources\/assets\/sass\/app\.scss` SASS file\. This `app\.scss` file imports a file of SASS variables and loads Bootstrap, which provides a good starting point for most applications\. Feel free to customize the `app\.scss` file however you wish or even use an entirely different pre-processor by \[configuring Laravel Mix\](\/docs\/{{version}}\/mix)\.$/Laravelにデフォルトで含まれる`webpack.mix.js`は、`resources\/assets\/sass\/app.scss` SASSファイルをコンパイルします。この`app.scss`ファイルはSASS変数のファイルと、ほとんどのアプリケーションの構築開始時に役に立つBootstrapをロードします。望みどおりに`app.scss`を自由にカスタマイズし、さらに[Laravel Mixを設定](\/docs\/{{version}}\/mix)することで、まったく別のプリプロセッサを使用することさえ可能です。/
s/^## Writing JavaScript$/## JavaScriptの出力/
s/^All of the JavaScript dependencies required by your application can be found in the `package\.json` file in the project's root directory\. This file is similar to a `composer\.json` file except it specifies JavaScript dependencies instead of PHP dependencies\. You can install these dependencies using the \[Node package manager (NPM)\](https:\/\/www\.npmjs\.org):$/アプリケーションで要求されている、JavaScriptの全依存パッケージは、プロジェクトルートディレクトリにある`package.json`ファイルで見つかります。このファイルは`composer.json`ファイルと似ていますが、PHPの依存パッケージの代わりにJavaScriptの依存が指定されている点が異なります。依存パッケージは、[Node package manager (NPM)](https:\/\/www.npmjs.org)を利用し、インストールできます。/
s/^> {tip} By default, the Laravel `package\.json` file includes a few packages such as `vue` and `axios` to help you get started building your JavaScript application\. Feel free to add or remove from the `package\.json` file as needed for your own application\.$/> {tip} JavaScriptアプリケーションを構築開始するために役立つよう、`vue`や`axios`のようなパッケージがデフォルトでLaravelの`package.json`ファイルに含まれています。自身のアプリケーションの要求に合わせ、`package.json`ファイルへ自由に追加、削除してください。/
s/^Once the packages are installed, you can use the `npm run dev` command to \[compile your assets\](\/docs\/{{version}}\/mix)\. Webpack is a module bundler for modern JavaScript applications\. When you run the `npm run dev` command, Webpack will execute the instructions in your `webpack\.mix\.js` file:$/`webpack.mix.js` file:パッケージをインストールしたら、`npm run dev`コマンドで[アセットをコンパイル](\/docs\/{{version}}\/mix)できます。Webpackは、モダンなJavaScriptアプリケーションのための、モジュールビルダです。`npm run dev`コマンドを実行すると、Webpackは`webpack.mix.js`ファイル中の指示を実行します。/
s/^By default, the Laravel `webpack\.mix\.js` file compiles your SASS and the `resources\/assets\/js\/app\.js` file\. Within the `app\.js` file you may register your Vue components or, if you prefer a different framework, configure your own JavaScript application\. Your compiled JavaScript will typically be placed in the `public\/js` directory\.$/デフォルトでLaravelの`webpack.mix.js`ファイルは、SASSと`resources\/assets\/js\/app.js`ファイルをコンパイルするように指示しています。`app.js`ファイルの中で、Vueコンポーネントを登録してください。もしくは、他のフーレムワークが好みであれば、自分のJavaScriptアプリケーションの設定を行えます。コンパイル済みのJavaScriptは通常、`public\/js`ディレクトリへ出力されます。/
s/^> {tip} The `app\.js` file will load the `resources\/assets\/js\/bootstrap\.js` file which bootstraps and configures Vue, Axios, jQuery, and all other JavaScript dependencies\. If you have additional JavaScript dependencies to configure, you may do so in this file\.$/> {tip} `app.js`ファイルは、Vue、Axios、jQuery、その他のJavaScript依存パッケージを起動し、設定する`resources\/assets\/js\/bootstrap.js`ファイルをロードします。JacaScript依存パッケージを追加した場合、このファイルの中で設定してください。/
s/^### Writing Vue Components$/### Vueコンポーネントの出力/
s/^By default, fresh Laravel applications contain an `ExampleComponent\.vue` Vue component located in the `resources\/assets\/js\/components` directory\. The `ExampleComponent\.vue` file is an example of a \[single file Vue component\](https:\/\/vuejs\.org\/guide\/single-file-components) which defines its JavaScript and HTML template in the same file\. Single file components provide a very convenient approach to building JavaScript driven applications\. The example component is registered in your `app\.js` file:$/インストールしたてのLaravelアプリケーションは、デフォルトとして、`resources\/assets\/js\/components`ディレクトリの中に`ExampleComponent.vue` Vueコンポーネントを持っています。`ExampleComponent.vue`ファイルは、JacaScriptとHTMLテンプレートを同じファイル中で定義している、[シングルファイルVueコンポーネント](https:\/\/vuejs.org\/guide\/single-file-components)の一例です。シングルファイルコンポーネントは、JavaScript駆動アプリケーションを構築するために、とても便利なアプローチを提供しています。`app.js`ファイルで登録されています。このコンポーネントサンプルは、`app.js`ファイル中で登録されています。/
s/^    Vue\.component($/    Vue.component(/
s/^        require('\.\/components\/ExampleComponent\.vue')$/        require('.\/components\/ExampleComponent.vue')/
s/^To use the component in your application, you may drop it into one of your HTML templates\. For example, after running the `make:auth` Artisan command to scaffold your application's authentication and registration screens, you could drop the component into the `home\.blade\.php` Blade template:$/アプリケーションでコンポ―エントを使用するには、HTMLの定形コードを挿入します。たとえば、アプリケーションの認証のスカフォールドを行うために、`make:auth` Artisanコマンドを実行し、スクリーンを登録したら、`home.blade.php` Bladeテンプレートにコンポーネントを挿入できます。/
s/^    @extends('layouts\.app')$/    @extends('layouts.app')/
s/^> {tip} Remember, you should run the `npm run dev` command each time you change a Vue component\. Or, you may run the `npm run watch` command to monitor and automatically recompile your components each time they are modified\.$/> {tip} Vueコンポーネントを変更したら、毎回`npm run dev`コマンドを実行しなくてはならないことを覚えておきましょう。もしくは、`npm run watch`コマンドを実行して監視すれば、コンポーネントが更新されるたび、自動的に再コンパイルされます。/
s/^Of course, if you are interested in learning more about writing Vue components, you should read the \[Vue documentation\](https:\/\/vuejs\.org\/guide\/), which provides a thorough, easy-to-read overview of the entire Vue framework\.$/もちろん、Vueコンポーネントの記述を学ぶことに興味があれば、Vueフレームワーク全体についての概念を簡単に読み取れる、[Vueドキュメント](https:\/\/vuejs.org\/guide\/)を一読してください。/
s/^### Using React$/### Reactの使用/
s/^If you prefer to use React to build your JavaScript application, Laravel makes it a cinch to swap the Vue scaffolding with React scaffolding\. On any fresh Laravel application, you may use the `preset` command with the `react` option:$/JavaScriptアプリケーションの構築に、Reactを使いたければ、Laravelは簡単にVueのスカフォールドをReactのスカフォールドへ簡単に変更します。真新しいLaravelアプリケーションで、`react`オプションを付け、`preset`コマンドを使用してください。/
s/^This single command will remove the Vue scaffolding and replace it with React scaffolding, including an example component\.$/このコマンド一つで、Vueのスカフォールドを削除し、サンプルコンポーネントを含んだReactのスカフォールドを設置します。/
